from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes

# === –ù–ê–°–¢–†–û–ô–ö–ò (–ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ò –î–ê–ù–ù–´–ï) ===
TOKEN = "1234567890:AAFfghijkllmnopqrstuvwxyz1234567890A"  # ‚Üê –¢–û–ö–ï–ù –û–¢ @BotFather
ADMIN_CHAT_ID = 123456789  # ‚Üê –¢–í–û–ô ID (–æ—Ç @userinfobot)
CHANNEL_ID = "@YourChannelName"  # ‚Üê –Æ–ó–ï–†–ù–ï–ô–ú –¢–í–û–ï–ì–û –ö–ê–ù–ê–õ–ê

# === –ö–û–ú–ê–ù–î–ê /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üìö –ù–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã", callback_data="programs")],
        [InlineKeyboardButton("üéØ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ", callback_data="trial")],
        [InlineKeyboardButton("‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")],
        [InlineKeyboardButton("‚≠ê –û—Ç–∑—ã–≤—ã —Ä–æ–¥–∏—Ç–µ–ª–µ–π", callback_data="reviews")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "–Ø ‚Äî –±–æ—Ç *–î–µ—Ç—Å–∫–æ–π —à–∫–æ–ª—ã –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤*.\n\n"
        "–ú—ã –ø–æ–º–æ–≥–∞–µ–º –¥–µ—Ç—è–º –æ—Ç 4 –¥–æ 14 –ª–µ—Ç –ª–µ–≥–∫–æ –∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –≤—ã—É—á–∏—Ç—å:\n"
        "üá¨üáß –ê–Ω–≥–ª–∏–π—Å–∫–∏–π  üá©üá™ –ù–µ–º–µ—Ü–∫–∏–π  üá´üá∑ –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π\n\n"
        "–•–æ—á–µ—à—å, —á—Ç–æ–±—ã —Ç–≤–æ–π —Ä–µ–±—ë–Ω–æ–∫ –≥–æ–≤–æ—Ä–∏–ª –Ω–∞ —è–∑—ã–∫–µ –∫–∞–∫ –Ω–æ—Å–∏—Ç–µ–ª—å?\n"
        "–ù–∞—á–Ω–∏ —Å *–±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø—Ä–æ–±–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è*!",
        reply_markup=reply_markup,
        parse_mode="Markdown"
    )

# === –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–û–ö ===
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "programs":
        await query.edit_message_text(
            "üìñ *–ù–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã:*\n\n"
            "üîπ *–ê–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è –º–∞–ª—ã—à–µ–π (4‚Äì6 –ª–µ—Ç)* ‚Äî –∏–≥—Ä—ã, –ø–µ—Å–Ω–∏, —Å–∫–∞–∑–∫–∏\n"
            "üîπ *–ê–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ (7‚Äì14 –ª–µ—Ç)* ‚Äî —Ä–∞–∑–≥–æ–≤–æ—Ä, –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞, –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º\n"
            "üîπ *–ù–µ–º–µ—Ü–∫–∏–π –∏ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π* ‚Äî —Å 8 –ª–µ—Ç\n\n"
            "‚úÖ –ú–∏–Ω–∏-–≥—Ä—É–ø–ø—ã (–¥–æ 6 –¥–µ—Ç–µ–π)\n"
            "‚úÖ –û–ø—ã—Ç–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏\n"
            "‚úÖ –£—Ä–æ–∫–∏ –æ–Ω–ª–∞–π–Ω –∏ –≤ –º–∏–Ω–∏-–≥—Ä—É–ø–ø–∞—Ö",
            parse_mode="Markdown"
        )

    elif query.data == "trial":
        await query.edit_message_text(
            "üéâ –û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –∑–∞–ø–∏—à–µ–º –≤–∞—à–µ–≥–æ —Ä–µ–±—ë–Ω–∫–∞ –Ω–∞ *–±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ*.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ:\n"
            "1. –ò–º—è —Ä–µ–±—ë–Ω–∫–∞\n"
            "2. –í–æ–∑—Ä–∞—Å—Ç\n"
            "3. –Ø–∑—ã–∫ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –Ω–µ–º–µ—Ü–∫–∏–π, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π)\n"
            "4. –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω\n\n"
            "–ü—Ä–∏–º–µ—Ä:\n"
            "–ú–∞—à–∞, 6 –ª–µ—Ç, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, +79991234567"
        )
        context.user_data['awaiting_application'] = True

    elif query.data == "faq":
        await query.edit_message_text(
            "‚ùì *–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã:*\n\n"
            "üîπ *–°–∫–æ–ª—å–∫–æ –¥–ª–∏—Ç—Å—è –∑–∞–Ω—è—Ç–∏–µ?*\n"
            "‚Äî 45 –º–∏–Ω—É—Ç (–º–∞–ª—ã—à–∏), 60 –º–∏–Ω—É—Ç (—à–∫–æ–ª—å–Ω–∏–∫–∏)\n\n"
            "üîπ *–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –æ–±—É—á–µ–Ω–∏–µ?*\n"
            "‚Äî –û—Ç 1200 —Ä—É–±/–º–µ—Å –≤ –≥—Ä—É–ø–ø–µ, –æ—Ç 2500 —Ä—É–±/–∑–∞–Ω—è—Ç–∏–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ\n\n"
            "üîπ *–ï—Å—Ç—å –ª–∏ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ?*\n"
            "‚Äî –î–∞, –±–µ—Å–ø–ª–∞—Ç–Ω–æ!\n\n"
            "üîπ *–ì–¥–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –∑–∞–Ω—è—Ç–∏—è?*\n"
            "‚Äî –û–Ω–ª–∞–π–Ω –∏ –≤ –º–∏–Ω–∏-–≥—Ä—É–ø–ø–∞—Ö –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞."
        )

    elif query.data == "reviews":
        await query.edit_message_text(
            "‚≠ê *–û—Ç–∑—ã–≤—ã —Ä–æ–¥–∏—Ç–µ–ª–µ–π:*\n\n"
            "¬´–î–æ—á–∫–∞ —Ö–æ–¥–∏—Ç —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º, —É–∂–µ –≥–æ–≤–æ—Ä–∏—Ç –ø—Ä–æ—Å—Ç—ã–µ —Ñ—Ä–∞–∑—ã!¬ª ‚Äî –ê–Ω–Ω–∞, –º–∞–º–∞ 5-–ª–µ—Ç–Ω–µ–π –õ–µ—Ä—ã\n\n"
            "¬´–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å ‚Äî –≤–æ–ª—à–µ–±–Ω–∏–∫! –†–µ–±—ë–Ω–æ–∫ —Å–∞–º –ø—Ä–æ—Å–∏—Ç –∏–¥—Ç–∏ –Ω–∞ —É—Ä–æ–∫.¬ª ‚Äî –î–º–∏—Ç—Ä–∏–π\n\n"
            "üì∏ –°–º–æ—Ç—Ä–∏—Ç–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ —Å –∑–∞–Ω—è—Ç–∏–π –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ: [–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª](https://t.me/todayschool_nsk)",
            parse_mode="Markdown"
        )

# === –û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–ô (–∑–∞—è–≤–∫–∏) ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.user_data.get('awaiting_application'):
        text = update.message.text
        user = update.message.from_user

        application_text = (
            f"üÜï *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ü–†–û–ë–ù–û–ï –ó–ê–ù–Ø–¢–ò–ï*\n\n"
            f"–û—Ç: {user.full_name} (@{user.username})\n"
            f"–î–∞–Ω–Ω—ã–µ —Ä–æ–¥–∏—Ç–µ–ª—è:\n{text}\n\n"
            f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}"
        )
        await context.bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=application_text,
            parse_mode="Markdown"
        )

        await update.message.reply_text(
            "‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É.\n\n"
            "–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è.\n\n"
            "–ê –ø–æ–∫–∞ ‚Äî –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª, –≥–¥–µ –º—ã –ø—É–±–ª–∏–∫—É–µ–º —É—Å–ø–µ—Ö–∏ —É—á–µ–Ω–∏–∫–æ–≤: @YourChannelName"
        )

        context.user_data['awaiting_application'] = False

# === –ó–ê–ü–£–°–ö –ë–û–¢–ê ===
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", –ø–æ–æ–±—â–∞–µ–º—Å—è))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    app.run_polling()

if __name__ == "__main__":
    main()
